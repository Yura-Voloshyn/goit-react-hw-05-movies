{"version":3,"file":"static/js/736.329b196b.chunk.js","mappings":"uQAEaA,E,QAAMC,GAAAA,IAAH,yC,SCsDhB,EAlDa,WACX,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAsB,mCAAG,WAAMN,GAAN,uFAEX,UAFW,UAGAO,EAAAA,EAAAA,IAAuBP,EADlC,WAFW,OAGrBQ,EAHqB,OAI3BJ,EAAgBI,EAAaC,MAJF,gDAM3BC,QAAQC,IAAR,MAN2B,yDAAH,sDAS5BL,EAAuBN,EACxB,GAAE,CAACA,IAGJ,IAAMY,EAAUT,EAAaU,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAchB,EAAlC,EAAkCA,GAAlC,OAC/B,2BACE,SAACF,EAAD,CACEmB,IACmB,OAAjBD,EACI,8CADJ,0CAEuCA,GAEzCE,IAAKJ,KAEP,uBAAIA,KACJ,uCAAeC,OAVRf,EADsB,IAcjC,OACE,8BACE,0BACE,wBAAKY,OAIZ,C,oLC3CKO,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRC,IAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFZ,cACzBG,EADyB,yBAKxBA,EAASC,KAAKC,SALU,2CAAH,qDAQjBC,EAAY,mCAAG,WAAM1B,GAAN,uFACHsB,IAAAA,IAAA,UAClBH,EADkB,iBACDnB,EADC,oBACaoB,EADb,oBADG,cACpBG,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZjB,EAAsB,mCAAG,WAAOP,EAAI2B,GAAX,uFACbL,IAAAA,IAAA,UAClBH,EADkB,iBACDnB,EADC,YACK2B,EADL,oBACwBP,EADxB,oBADa,cAC9BG,EAD8B,yBAI7BA,EAASC,MAJoB,2CAAH,wDAOtBI,EAAsB,mCAAG,WAAMC,GAAN,uFACbP,IAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8CS,EAD9C,gCADa,cAC9BN,EAD8B,yBAI7BA,EAASC,KAAKC,SAJe,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/apiGetMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Img = styled.img`\n  width: 100px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieAdditionalInfo } from 'services/apiGetMovies';\nimport { Img } from './Cast.styled';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [movieCredits, setMovieCredits] = useState([]);\n\n  useEffect(() => {\n    const getApiMovieCreditsById = async id => {\n      try {\n        const keyword = 'credits';\n        const apiMovieById = await getMovieAdditionalInfo(id, keyword);\n        setMovieCredits(apiMovieById.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getApiMovieCreditsById(id);\n  }, [id]);\n  //   const { name, character, profile_path } = movieCredits;\n\n  const element = movieCredits.map(({ name, character, profile_path, id }) => (\n    <li key={id}>\n      <Img\n        src={\n          profile_path === null\n            ? 'https://stringfixer.com/files/951711496.jpg'\n            : `https://image.tmdb.org/t/p/w342/${profile_path}`\n        }\n        alt={name}\n      />\n      <p>{name}</p>\n      <p>Character: {character}</p>\n    </li>\n  ));\n  return (\n    <section>\n      <div>\n        <ul>{element}</ul>\n      </div>\n    </section>\n  );\n};\n\nCast.propTypes = {\n  elements: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    character: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    profile_path: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b28dcafbfbdc99f3059a27aaeb93fed6';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieAdditionalInfo = async (id, keyword) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/${keyword}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesBySearchQuery = async searchQuery => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["Img","styled","id","useParams","useState","movieCredits","setMovieCredits","useEffect","getApiMovieCreditsById","getMovieAdditionalInfo","apiMovieById","cast","console","log","element","map","name","character","profile_path","src","alt","BASE_URL","API_KEY","getTrendingMovies","axios","response","data","results","getMovieById","keyword","getMoviesBySearchQuery","searchQuery"],"sourceRoot":""}