{"version":3,"file":"static/js/257.7e7a85fc.chunk.js","mappings":"iQAEaA,EAAOC,EAAAA,GAAAA,KAAH,gDAGJC,EAAUD,EAAAA,GAAAA,IAAH,0CAIPE,EAAMF,EAAAA,GAAAA,IAAH,kF,SC2EhB,EAxEqB,WAAO,IAAD,EACjBG,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,IACrC,GAAkCG,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,YACgB,SAAAV,GACtB,KACEW,EAAAA,EAAAA,IAAaX,GAAIY,MAAK,SAAAC,GAAG,OAAIJ,EAAaI,EAAjB,GAG1B,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,CACDG,CAAgBjB,EACjB,GAAE,CAACA,IAEJ,IAAQkB,EACNV,EADMU,eAAgBC,EACtBX,EADsBW,OAAQC,EAC9BZ,EAD8BY,SAAUC,EACxCb,EADwCa,YAAaC,EACrDd,EADqDc,aAEjDC,EAAkBJ,EACpBA,EAAOK,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACrC,KAEAC,EAAOP,EAAD,0CAE6BA,GADnC,8CAEEQ,EAAuB,IAAfP,EAAsB,GAEpC,OACE,UAAC1B,EAAD,YACE,mBAAQkC,QAHG,kBAAM5B,EAASE,EAAf,EAGX,sBACA,UAACN,EAAD,YACE,SAACC,EAAD,CAAK6B,IAAKA,EAAKG,IAAKb,KACpB,4BACE,wBAAKA,KACL,wCAAgBW,EAAKG,UAArB,SACA,sCACA,uBAAIZ,KACJ,oCACA,uBAAwB,OAApBG,GAA4BA,WAGpC,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMjB,MAAO,CAAEF,KAAAA,GAAQ6B,GAAG,OAA1B,qBAIF,yBACE,SAAC,KAAD,CAAM3B,MAAO,CAAEF,KAAAA,GAAQ6B,GAAG,UAA1B,2BAKJ,SAAC,KAAD,MAGL,C,oLCtEKC,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRC,IAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFZ,cACzBG,EADyB,yBAKxBA,EAASC,KAAKC,SALU,2CAAH,qDAQjB7B,EAAY,mCAAG,WAAMX,GAAN,uFACHqC,IAAAA,IAAA,UAClBH,EADkB,iBACDlC,EADC,oBACamC,EADb,oBADG,cACpBG,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZE,EAAsB,mCAAG,WAAOzC,EAAI0C,GAAX,uFACbL,IAAAA,IAAA,UAClBH,EADkB,iBACDlC,EADC,YACK0C,EADL,oBACwBP,EADxB,oBADa,cAC9BG,EAD8B,yBAI7BA,EAASC,MAJoB,2CAAH,wDAOtBI,EAAsB,mCAAG,WAAMC,GAAN,uFACbP,IAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8CS,EAD9C,gCADa,cAC9BN,EAD8B,yBAI7BA,EAASC,KAAKC,SAJe,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/apiGetMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Main = styled.main`\n  /* display: flex; */\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n  height: 300px;\n  margin-right: 10px;\n`;\n","import { getMovieById } from '../../services/apiGetMovies';\nimport {\n  useParams,\n  Link,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { Main, Img, Wrapper } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n  const [movieById, setMovieById] = useState([]);\n\n  useEffect(() => {\n    const getApiMovieById = id => {\n      try {\n        getMovieById(id).then(res => setMovieById(res));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getApiMovieById(id);\n  }, [id]);\n\n  const { original_title, genres, overview, poster_path, vote_average } =\n    movieById;\n  const genresForRender = genres\n    ? genres.map(genre => genre.name).join(', ')\n    : null;\n\n  let src = !poster_path\n    ? 'https://stringfixer.com/files/951711496.jpg'\n    : `https://image.tmdb.org/t/p/w300/${poster_path}`;\n  const vote = (vote_average * 100) / 10;\n  const goBack = () => navigate(from);\n  return (\n    <Main>\n      <button onClick={goBack}>Go back</button>\n      <Wrapper>\n        <Img src={src} alt={original_title} />\n        <div>\n          <h1>{original_title}</h1>\n          <p>User Score: {vote.toFixed()} %</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genresForRender !== null && genresForRender}</p>\n        </div>\n      </Wrapper>\n      <p>Additional Information</p>\n      <ul>\n        <li>\n          <Link state={{ from }} to=\"cast\">\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link state={{ from }} to=\"reviews\">\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </Main>\n  );\n};\n\nMovieDetails.propTypes = {\n  movieById: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n    overview: PropTypes.array,\n    genres: PropTypes.array,\n  }),\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b28dcafbfbdc99f3059a27aaeb93fed6';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieAdditionalInfo = async (id, keyword) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/${keyword}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesBySearchQuery = async searchQuery => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["Main","styled","Wrapper","Img","id","useParams","navigate","useNavigate","from","useLocation","state","useState","movieById","setMovieById","useEffect","getMovieById","then","res","error","console","log","getApiMovieById","original_title","genres","overview","poster_path","vote_average","genresForRender","map","genre","name","join","src","vote","onClick","alt","toFixed","to","BASE_URL","API_KEY","getTrendingMovies","axios","response","data","results","getMovieAdditionalInfo","keyword","getMoviesBySearchQuery","searchQuery"],"sourceRoot":""}