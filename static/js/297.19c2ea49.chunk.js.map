{"version":3,"file":"static/js/297.19c2ea49.chunk.js","mappings":"uKAGMA,EAAgB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjBC,GAAWC,EAAAA,EAAAA,MACXC,EAAWH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACzB,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMR,GAAYS,GAAE,kBAAaL,GAAhD,gBACGC,QADH,IACGA,EAAAA,EAASC,KAFLF,EADgB,IAO3B,OAAO,wBAAKF,GACb,EAED,MAEAJ,EAAcY,aAAe,CAC3BX,MAAO,G,2KChBIY,EAAUC,EAAAA,GAAAA,IAAH,uHASPC,EAAaD,EAAAA,GAAAA,KAAH,8KAUVE,EAAsBF,EAAAA,GAAAA,OAAH,qaAiBnBG,EAAaH,EAAAA,GAAAA,KAAH,6MAWVI,EAAcJ,EAAAA,GAAAA,MAAH,0VAmBXK,GAAOL,EAAAA,EAAAA,IAAOM,EAAAA,IAAPN,CAAH,oF,SCvBjB,EAnCkB,SAAC,GAAkB,IAAhBO,EAAe,EAAfA,SACnB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAYA,OACE,SAACX,EAAD,WACE,UAACE,EAAD,CAAYM,SARS,SAAAI,GACvBA,EAAEC,iBACFL,EAASE,GACTC,EAAe,GAChB,EAIG,WACE,SAACN,EAAD,CACEV,KAAK,SACLmB,SAfiB,SAAAF,GACvBD,EAAeC,EAAEG,cAAcC,MAAMC,cACtC,EAcOD,MAAON,EACPQ,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,UAAQ,KAEV,UAACnB,EAAD,CAAqBe,KAAK,SAA1B,WACE,SAACZ,EAAD,KACA,SAACF,EAAD,4BAKT,E,6BCAD,EApCe,WAAO,IAAD,EACnB,GAAkCK,EAAAA,EAAAA,UAAS,IAA3C,eAAOc,EAAP,KAAkBC,EAAlB,KACA,GAA8Bf,EAAAA,EAAAA,WAAS,GAAvC,eAAOgB,EAAP,KAAgBC,EAAhB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,IAC7CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,oGAEvBP,GAAW,GAFY,UAGOQ,EAAAA,EAAAA,IAAuBJ,GAH9B,OAGjBK,EAHiB,OAKvBX,EAAaW,GACbT,GAAW,GANY,gDAQvBU,QAAQC,IAAR,MARuB,yBAUvBX,GAAW,GAVY,4EAAH,qDAapBI,GACFG,GAEH,GAAE,CAACH,IAIJ,OACE,6BACE,SAAC,EAAD,CAAWtB,SALM,SAAAsB,GACnBD,EAAgB,CAAEC,OAAAA,GACnB,IAIIL,IAAW,SAACa,EAAA,EAAD,IACXf,EAAUgB,OAAS,IAAK,SAACpD,EAAA,EAAD,CAAeC,MAAOmC,MAGpD,C,oLCvCKiB,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRC,IAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFZ,cACzBG,EADyB,yBAKxBA,EAASC,KAAKC,SALU,2CAAH,qDAQjBC,EAAY,mCAAG,WAAMtD,GAAN,uFACHkD,IAAAA,IAAA,UAClBH,EADkB,iBACD/C,EADC,oBACagD,EADb,oBADG,cACpBG,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAsB,mCAAG,WAAOvD,EAAIwD,GAAX,uFACbN,IAAAA,IAAA,UAClBH,EADkB,iBACD/C,EADC,YACKwD,EADL,oBACwBR,EADxB,oBADa,cAC9BG,EAD8B,yBAI7BA,EAASC,MAJoB,2CAAH,wDAOtBX,EAAsB,mCAAG,WAAMxB,GAAN,uFACbiC,IAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8C/B,EAD9C,gCADa,cAC9BkC,EAD8B,yBAI7BA,EAASC,KAAKC,SAJe,2CAAH,qD","sources":["components/ListForRender/ListForRender.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","services/apiGetMovies.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ListForRender = ({ items }) => {\n  const location = useLocation();\n  const elements = items.map(({ id, title, name }) => (\n    <li key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        {title ?? name}\n      </Link>\n    </li>\n  ));\n  return <ul>{elements}</ul>;\n};\n\nexport default ListForRender;\n\nListForRender.defaultProps = {\n  items: [],\n};\n\nListForRender.propTypes = {\n  elements: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\nimport { AiOutlineSearch } from 'react-icons/ai';\nexport const Wrapper = styled.div`\n  z-index: 1100;\n  display: flex;\n  padding: 8px;\n  align-items: center;\n\n  color: #fff;\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const StyledSearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 30px;\n  border: 0;\n  /* background-image: url('../../icons/search_FILL0_wght400_GRAD0_opsz48.svg'); */\n  background-size: 80%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const StyledSpan = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\nexport const StyledInput = styled.input`\n  height: 100%;\n  display: inline-block;\n  width: 100%;\n  vertical-align: middle;\n  font: inherit;\n  font-size: 16px;\n  border: 1px solid #cacaca;\n  border-radius: 3px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  size: 50px;\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n\nexport const Icon = styled(AiOutlineSearch)`\n  width: 20px;\n  height: 20px;\n  vertical-align: middle;\n`;\n","import { useState } from 'react';\nimport {\n  Wrapper,\n  StyledForm,\n  StyledSearchFormBtn,\n  StyledSpan,\n  StyledInput,\n  Icon,\n} from './Searchbar.styled';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleInputValue = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <Wrapper>\n      <StyledForm onSubmit={handleFormSubmit}>\n        <StyledInput\n          name=\"search\"\n          onChange={handleInputValue}\n          value={searchQuery}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          required\n        />\n        <StyledSearchFormBtn type=\"submit\">\n          <Icon />\n          <StyledSpan>Search</StyledSpan>\n        </StyledSearchFormBtn>\n      </StyledForm>\n    </Wrapper>\n  );\n};\n\nexport default Searchbar;\n","import { getMoviesBySearchQuery } from '../../services/apiGetMovies';\nimport { useState, useEffect } from 'react';\nimport Searchbar from '../../components/Searchbar/Searchbar';\nimport ListForRender from '../../components/ListForRender/ListForRender';\nimport Loader from '../../components/Loader/Loader';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search') ?? '';\n  useEffect(() => {\n    const getApiSearchMovies = async () => {\n      try {\n        setLoading(true);\n        const apiSearchMovies = await getMoviesBySearchQuery(search);\n\n        setMovieList(apiSearchMovies);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (search) {\n      getApiSearchMovies();\n    }\n  }, [search]);\n  const changeSearch = search => {\n    setSearchParams({ search });\n  };\n  return (\n    <main>\n      <Searchbar onSubmit={changeSearch} />\n      {loading && <Loader />}\n      {movieList.length > 0 && <ListForRender items={movieList} />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b28dcafbfbdc99f3059a27aaeb93fed6';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieAdditionalInfo = async (id, keyword) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/${keyword}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesBySearchQuery = async searchQuery => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["ListForRender","items","location","useLocation","elements","map","id","title","name","state","from","to","defaultProps","Wrapper","styled","StyledForm","StyledSearchFormBtn","StyledSpan","StyledInput","Icon","AiOutlineSearch","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","onChange","currentTarget","value","toLowerCase","type","autoComplete","autoFocus","placeholder","required","movieList","setMovieList","loading","setLoading","useSearchParams","searchParams","setSearchParams","search","get","useEffect","getApiSearchMovies","getMoviesBySearchQuery","apiSearchMovies","console","log","Loader","length","BASE_URL","API_KEY","getTrendingMovies","axios","response","data","results","getMovieById","getMovieAdditionalInfo","keyword"],"sourceRoot":""}